services:
  gfarm-http-gateway:
    build:
      context: .
    container_name: gfarm-http-gateway
    command: --host 0.0.0.0 --port 8080 --forwarded-allow-ips="*"
    # for Run with a Subpath
    # command: --host 0.0.0.0 --port 8080 --root-path /gfarm
    volumes:
      # Required: Gfarm HTTP gateway config
      - ./config/gfarm-http-gateway-for-HPCI.conf:/config/gfarm-http-gateway.conf:ro
      # Required: Gfarm config
      - ./config/gfarm2.conf:/config/gfarm2.conf:ro
      # Required: CA certs for Gfarm
      - ./config/certs:/config/certs:ro
      # Custom Login Page
      - ./templates/login-idp-switch.html:/config/templates/login.html
    depends_on:
      - redis
    restart: unless-stopped

  gfarm-http-gateway-sub:
    build:
      context: .
    container_name: gfarm-http-gateway-sub
    # for Run with a Subpath
    command: --host 0.0.0.0 --port 8080 --root-path /sub --forwarded-allow-ips="*"
    volumes:
      # Required: Gfarm HTTP gateway config
      - ./config/gfarm-http-gateway-for-HPCI-sub.conf:/config/gfarm-http-gateway.conf:ro
      # Required: Gfarm config
      - ./config/gfarm2.conf:/config/gfarm2.conf:ro
      # Required: CA certs for Gfarm
      - ./config/certs:/config/certs:ro
      # Custom Login Page
      - ./templates/login-idp-switch.html:/config/templates/login.html
    depends_on:
      - redis
    restart: unless-stopped

  nginx-proxy:
    container_name: nginx-proxy
    image: nginx:latest
    ports:
      - "443:443"    # HTTPS
      # - "8880:8880"  # HTTP (development only)
    volumes:
      # Required: Nginx config
      - ./nginx/nginx-for-HPCI-with-sub.conf:/etc/nginx/conf.d/gfarm.conf:ro
      # Required for HTTPS: TLS server certs/keys for Nginx
      # set to ssl_certificate and ssl_certificate_key in Nginx config
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - gfarm-http-gateway
      - gfarm-http-gateway-sub
    restart: unless-stopped

  redis:
    image: redis
    command: ["redis-server", "/config/redis.conf"]
    volumes:
      # Required: Redis configuration
      - ./redis/redis.conf:/config/redis.conf:ro
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 10s
      timeout: 3s
      retries: 20
    restart: unless-stopped
