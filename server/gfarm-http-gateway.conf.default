# ========================================
# Basic
# ========================================

# GFARM_HTTP_GFARM_CONFIG_FILE
#   specify a Gfarm configuration file instead of ~/.gfarm2rc
#   default: empty string ... use ~/.gfarm2rc
GFARM_HTTP_GFARM_CONFIG_FILE=

# GFARM_HTTP_ORIGINS
#   allowed URLs for CORS (Cross-Origin Resource Sharing)
GFARM_HTTP_ORIGINS="http://localhost:8000,http://localhost:8080"

# GFARM_HTTP_TMPDIR
# Temporary directory to store token files for long-term exec (gfptar).
# Token files are removed after gfptar finishes.
# The gateway cleans up this directory when it starts.
GFARM_HTTP_TMPDIR="/tmp/gfarm-http-gateway"

# ========================================
# Sessions
# ========================================

# GFARM_HTTP_SESSION_SECRET
#   value: random 32 url-safe base64-encoded bytes
#          (ex. `openssl rand -base64 32`)
#   ex.: GFARM_HTTP_SESSION_SECRET="qU70WDyIpXdSOT9/7l0hICy0597EPRs/aPb5Mj5Xniw="
GFARM_HTTP_SESSION_SECRET=

# GFARM_HTTP_SESSION_MAX_AGE
#   The amount of time a user session remains valid before expiring
#   value: sec
GFARM_HTTP_SESSION_MAX_AGE=604800

# ========================================
# Authentication
# ========================================

# GFARM_HTTP_SASL_MECHANISM_FOR_PASSWORD
#   SASL mechanism for password authentication
#   value: PLAIN ... use SASL:PLAIN
#          LOGIN ... use SASL:LOGIN
GFARM_HTTP_SASL_MECHANISM_FOR_PASSWORD=PLAIN

# GFARM_HTTP_ALLOW_ANONYMOUS
#   allow anonymous access (use SASL:ANONYMOUS)
#   value: yes, no
GFARM_HTTP_ALLOW_ANONYMOUS=no

# GFARM_HTTP_ANONYMOUS_USERNAME
#   Display name to attach when using anonymous access.
#   Used for UI messages.
#   Default: Guest
GFARM_HTTP_ANONYMOUS_USERNAME=Guest

# ========================================
# OpenID Connect
# ========================================

# GFARM_HTTP_OIDC_REDIRECT_URI_PAGE
#   switch a page for redirect_uri to get OIDC authorization code
#   value: index ... redirect_uri is <base URL>/
#          auth  ... redirect_uri is <base URL>/auth
GFARM_HTTP_OIDC_REDIRECT_URI_PAGE=index

# GFARM_HTTP_OIDC_OVERRIDE_REDIRECT_URI
#   use the URI instead of GFARM_HTTP_OIDC_REDIRECT_URI_PAGE
#   default: (empty string ... use GFARM_HTTP_OIDC_REDIRECT_URI_PAGE)
#   ex.: GFARM_HTTP_OIDC_OVERRIDE_REDIRECT_URI=http://localhost:8080/
#   ex.: GFARM_HTTP_OIDC_OVERRIDE_REDIRECT_URI=http://host1/auth
GFARM_HTTP_OIDC_OVERRIDE_REDIRECT_URI=

# GFARM_HTTP_OIDC_CLIENT_ID
#   OpenID Connect client ID
#   ex.: GFARM_HTTP_OIDC_CLIENT_ID=hpci-jwt-server
GFARM_HTTP_OIDC_CLIENT_ID=

# GFARM_HTTP_OIDC_CLIENT_SECRET
#   OpenID Connect client secret
#   default: empty string ... for public OIDC client
#   ex.: GFARM_HTTP_OIDC_CLIENT_SECRET="eJxl5z1EHU0u6BVLpR5MG0v4NLgCZWWG"
GFARM_HTTP_OIDC_CLIENT_SECRET=

# GFARM_HTTP_KEYCLOAK_SERVER
#   Keycloak server
#   (used for string replacement in GFARM_HTTP_OIDC_BASE_URL)
#   (DO NOT specify a last slash)
#   ex.: GFARM_HTTP_KEYCLOAK_SERVER=https://keycloak.test:8443
GFARM_HTTP_KEYCLOAK_SERVER=

# GFARM_HTTP_KEYCLOAK_REALM
#   Keycloak REALM
#   (used for string replacement in GFARM_HTTP_OIDC_BASE_URL)
#   ex.: GFARM_HTTP_KEYCLOAK_REALM=HPCI
GFARM_HTTP_KEYCLOAK_REALM=

# GFARM_HTTP_KEYCLOAK_RELATIVE_PATH
#   Relative path to Keycloak's authentication endpoint
#   (inserted between server hostname and realm in OIDC URLs).
#   Default is "/auth". If your Keycloak is configured without "/auth",
#   set this to an empty string.
GFARM_HTTP_KEYCLOAK_RELATIVE_PATH=/auth

# GFARM_HTTP_OIDC_BASE_URL
#   OpenID Connect base URL
#   (used for string replacement in GFARM_HTTP_OIDC_*)
#   default is for Keycloak (using GFARM_HTTP_KEYCLOAK_SERVER)
#   NOTE: "http://" does not work for Gfarm
#     gfmd[]: <err> [1005366]
#     SASL: xoauth2_plugin: introspect_token #012 Issuer URL must be HTTPS
GFARM_HTTP_OIDC_BASE_URL="{GFARM_HTTP_KEYCLOAK_SERVER}{GFARM_HTTP_KEYCLOAK_RELATIVE_PATH}/realms/{GFARM_HTTP_KEYCLOAK_REALM}"

# GFARM_HTTP_OIDC_META_URL
#   url for /.well-known/openid-configuration
#   See: https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationRequest
GFARM_HTTP_OIDC_META_URL="{GFARM_HTTP_OIDC_BASE_URL}/.well-known/openid-configuration"

# GFARM_HTTP_OIDC_KEYS_URL
#   URL of jwks_uri
#   default: empty string ... URL in JSON from GFARM_HTTP_OIDC_META_URL
#   Example for Keycloak (no need to specify for Keycloak):
#     GFARM_HTTP_OIDC_KEYS_URL="{GFARM_HTTP_OIDC_BASE_URL}/protocol/openid-connect/certs"
GFARM_HTTP_OIDC_KEYS_URL=

# GFARM_HTTP_OIDC_LOGOUT_URL
#   URL of end_session_endpoint
#   default: empty string ... URL in JSON from GFARM_HTTP_OIDC_META_URL
#   Example for Keycloak (no need to specify for Keycloak):
#     GFARM_HTTP_OIDC_LOGOUT_URL="{GFARM_HTTP_OIDC_BASE_URL}/protocol/openid-connect/logout"
GFARM_HTTP_OIDC_LOGOUT_URL=

# GFARM_HTTP_OIDC_MAX_ATTEMPTS
#   Max attempts per OIDC HTTP request.
#     - Network/timeout errors
#     - Transient HTTP status (408, 429, 500, 502, 503, 504)
#   default: 3
GFARM_HTTP_OIDC_MAX_ATTEMPTS=3

# GFARM_HTTP_OIDC_RETRY_INTERVAL
#   wait interval (in seconds, float allowed) between attempts
#   default: 0.2
GFARM_HTTP_OIDC_RETRY_INTERVAL=0.5

# ========================================
# Tokens
# ========================================

# GFARM_HTTP_TOKEN_VERIFY
#   verify access token
#   value: yes ... check some claims in access token
#                  (use GFARM_HTTP_TOKEN_AUDIENCE and GFARM_HTTP_TOKEN_ISSUERS)
#          no  ... check "exp" claim only
GFARM_HTTP_TOKEN_VERIFY=yes

# GFARM_HTTP_TOKEN_MIN_VALID_TIME_REMAINING
#   minimum remaining valid time before using refresh token
#   value: in second
GFARM_HTTP_TOKEN_MIN_VALID_TIME_REMAINING=60

# GFARM_HTTP_TOKEN_AUDIENCE
#   allow audience ("aud" claim) to verify
#   ex.: GFARM_HTTP_TOKEN_AUDIENCE=hpci
#   ex.: GFARM_HTTP_TOKEN_AUDIENCE=None (allow any "aud" claim)
#   ex.: GFARM_HTTP_TOKEN_AUDIENCE=     (allow any "aud")
GFARM_HTTP_TOKEN_AUDIENCE=

# GFARM_HTTP_TOKEN_ISSUERS
#   allow issuers (list of "iss" claim) to verify
#   ex.: GFARM_HTTP_TOKEN_ISSUERS="https://keycloak.test:8443/auth/realms/HPCI"
#   ex.: GFARM_HTTP_TOKEN_ISSUERS="https://keycloak1.test:8443/auth/realms/HPCI,https://keycloak2.test:8443/auth/realms/HPCI"
#   ex.: GFARM_HTTP_TOKEN_ISSUERS=None (allow any "iss" claim)
#   ex.: GFARM_HTTP_TOKEN_ISSUERS=     (allow any "iss" claim)
GFARM_HTTP_TOKEN_ISSUERS=

# GFARM_HTTP_TOKEN_USER_CLAIM
#   log the claim in access token as username
GFARM_HTTP_TOKEN_USER_CLAIM=sub

# ========================================
# Database (Redis)
# ========================================
# GFARM_HTTP_REDIS_HOST
#   Redis server hostname
#   ex.: GFARM_HTTP_REDIS_HOST=localhost
GFARM_HTTP_REDIS_HOST=gfarm-redis

# GFARM_HTTP_REDIS_PORT
#   Redis server port number.
#   ex.: GFARM_HTTP_REDIS_PORT=6379
GFARM_HTTP_REDIS_PORT=6379

# GFARM_HTTP_REDIS_DB
#   Redis logical database index.
#   ex.: GFARM_HTTP_REDIS_DB=0
GFARM_HTTP_REDIS_DB=0

# GFARM_HTTP_REDIS_SSL
#   Enable or disable TLS for Redis connection.
#   value :
#      no  : plain TCP connection
#      yes : use SSL/TLS
GFARM_HTTP_REDIS_SSL=

# GFARM_HTTP_REDIS_SSL_CERTFILE (optional)
# GFARM_HTTP_REDIS_SSL_KEYFILE  (optional)
#   Path to client certificate (PEM) and private key (PEM).
#   These are required ONLY if the Redis server is configured for mutual TLS (mTLS)
#   and requires the client to present its own certificate.
#   ex.: 
#     GFARM_HTTP_REDIS_SSL_CERTFILE=/etc/ssl/redis/client-cert.pem
#     GFARM_HTTP_REDIS_SSL_KEYFILE=/etc/ssl/redis/client-key.pem
GFARM_HTTP_REDIS_SSL_CERTFILE=
GFARM_HTTP_REDIS_SSL_KEYFILE=

# GFARM_HTTP_REDIS_SSL_CA_CERTS
#   Path to CA certificate bundle file (PEM) used to validate the Redis server certificate.
#   If omitted and SSL is enabled, system default CAs will be used.
#   ex.: GFARM_HTTP_REDIS_SSL_CA_CERTS=/etc/ssl/certs/ca-certificates.crt
GFARM_HTTP_REDIS_SSL_CA_CERTS=

# GFARM_HTTP_REDIS_ID_PREFIX (optional)
#   Prefix added to all Redis keys created by the gateway.
#   Useful when multiple apps share a Redis instance.
#   ex.: GFARM_HTTP_REDIS_ID_PREFIX=gfarm
GFARM_HTTP_REDIS_ID_PREFIX=

# GFARM_HTTP_REDIS_TTL
#   Time-to-live (seconds) for Redis-stored tokens.
#   After this period the token entry is automatically removed.
#   Set to 0 or leave empty to store without expiry (will be overwritten on refresh).
#   ex.: GFARM_HTTP_REDIS_TTL=86400
GFARM_HTTP_REDIS_TTL={GFARM_HTTP_SESSION_MAX_AGE}

# GFARM_HTTP_REDIS_USERNAME
#   username for Redis ACL-based authentication
#   leave empty if not required
GFARM_HTTP_REDIS_USERNAME=

# GFARM_HTTP_REDIS_PASSWORD
#   password for Redis authentication (requirepass or ACL)
#   leave empty if not required
GFARM_HTTP_REDIS_PASSWORD=

# GFARM_HTTP_REDIS_LOCK_TTL
#   lock expiration time (in seconds)
#   the lock will be released automatically after this period
#   default: 5
GFARM_HTTP_REDIS_LOCK_TTL=5

# GFARM_HTTP_REDIS_LOCK_MAX_ATTEMPTS
#   Maximum attempts to acquire the lock before giving up.
#   default: 10
GFARM_HTTP_REDIS_LOCK_MAX_ATTEMPTS=10

# GFARM_HTTP_REDIS_LOCK_INTERVAL
#   wait interval (in seconds, float allowed) between retries
#   default: 1.0
GFARM_HTTP_REDIS_LOCK_INTERVAL=1.0

# ========================================
# Performance
# ========================================

# GFARM_HTTP_RECURSIVE_MAX_DEPTH
#   Maximum number of recursive levels
#   value: 0~
GFARM_HTTP_RECURSIVE_MAX_DEPTH=16

# ========================================
# Logging
# ========================================

# GFARM_HTTP_LOCAL_LOGFILE
#   path to local log file
#   logs are written to both stderr and this file
#   default: empty (stderr only)
GFARM_HTTP_LOCAL_LOGFILE=

# GFARM_HTTP_LOCAL_LOGFILE_ROTATION
#   rotation policy for local log file
#   value example: "100 MB", "1 week", "00:00"
#   default: "100 MB"
GFARM_HTTP_LOCAL_LOGFILE_ROTATION="100 MB"

# GFARM_HTTP_LOCAL_LOGFILE_RETENTION
#   retention policy for rotated log files
#   value example: "10 days", "3 months"
#   default: "10 days"
GFARM_HTTP_LOCAL_LOGFILE_RETENTION="10 days"


# GFARM_HTTP_LOCAL_LOGFILE_COMPRESSION
#   compression format for rotated log files
#   value: empty ... default (no compression)
#          zip   ... compress rotated files in .zip
#          gz    ... compress rotated files in .gz
GFARM_HTTP_LOCAL_LOGFILE_COMPRESSION=

# GFARM_HTTP_SYSLOG
#   Where to send logs via syslog.
#   value: yes             ... use default Unix-domain socket (/dev/log)
#          /path/to/socket ... explicit Unix-domain socket path
#          host:port       ... send via UDP/TCP to a remote syslog server
#          no              ... syslog disabled
#   Examples:
#     GFARM_HTTP_SYSLOG=true
#     GFARM_HTTP_SYSLOG=/run/systemd/journal/syslog
#     GFARM_HTTP_SYSLOG=host.docker.internal:514
GFARM_HTTP_SYSLOG=no

# GFARM_HTTP_SYSLOG_FACILITY
#   Syslog facility to use. Prefer one of local0..local7 for application logs.
#   Examples: local0, local1, user, daemon
#   Default: local0
GFARM_HTTP_SYSLOG_FACILITY=local0

# GFARM_HTTP_SYSLOG_SOCK_TYPE
#   Protocol to use when sending to syslog.
#   value: udp (default), tcp
GFARM_HTTP_SYSLOG_SOCK_TYPE=udp

# ========================================
# Development & Debug (for production, keep default values)
# ========================================

# GFARM_HTTP_VERIFY_CERT
#   verify TLS certificate
#   value: yes ... secure (default)
#          no  ... insecure (for developer)
GFARM_HTTP_VERIFY_CERT=yes

# GFARM_HTTP_SESSION_COMPRESS_TYPE
#   compression type to compress session strings in cookie
#   value: gzip ... default
#          bz2  ... for developer (bz2-ed data is larger than gzip-ed)
GFARM_HTTP_SESSION_COMPRESS_TYPE=gzip

# GFARM_HTTP_SESSION_ENCRYPT
#   encrypt session data in cookie
#   value: yes ... default
#          no  ... for developer
GFARM_HTTP_SESSION_ENCRYPT=yes

# GFARM_HTTP_ASYNC_GFEXPORT
#   Run gfexport asynchronously
#   value: yes ... default
#          no  ... for developer
GFARM_HTTP_ASYNC_GFEXPORT=yes

# GFARM_HTTP_DEBUG
#   Enable debug logging
#   value: yes ... for developer
#          no  ... default
GFARM_HTTP_DEBUG=no
