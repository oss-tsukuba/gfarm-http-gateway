# GFARM_HTTP_ORIGINS
#   allowd URLs for CORS (Cross-Origin Resource Sharing)
GFARM_HTTP_ORIGINS="http://localhost:8000,http://localhost:8080"

# GFARM_HTTP_SECRET (required)
#   value: using `openssl rand -base64 32`
#   ex.: GFARM_HTTP_SECRET="qU70WDyIpXdSOT9/7l0hICy0597EPRs/aPb5Mj5Xniw="

# GFARM_HTTP_SESSION_ENCRYPT
#   encrypt session strings in cookie
#   value: yes (required)
#          no ... for developer
GFARM_HTTP_SESSION_ENCRYPT=yes

# GFARM_HTTP_SESSION_COMPRESS_TYPE
#   compression type to compress session strings in cookie
#   value: gzip (required)
#          bz2 ... for developer
GFARM_HTTP_SESSION_COMPRESS_TYPE=gzip

# GFARM_HTTP_OIDC_REDIRECT_URI_PAGE
#   switch a page for redirect_uri to get OIDC authorization code
#   value: index ... redirect_uri is <base URL>/
#          auth  ... redirect_uri is <base URL>/auth
GFARM_HTTP_OIDC_REDIRECT_URI_PAGE=index

# GFARM_HTTP_OIDC_OVERRIDE_REDIRECT_URI
#   use the URI instead of GFARM_HTTP_OIDC_REDIRECT_URI_PAGE
#   default: (empty string ... use GFARM_HTTP_OIDC_REDIRECT_URI_PAGE)
#   ex.: GFARM_HTTP_OIDC_OVERRIDE_REDIRECT_URI=http://localhost:8080/
#   ex.: GFARM_HTTP_OIDC_OVERRIDE_REDIRECT_URI=http://host1/auth
GFARM_HTTP_OIDC_OVERRIDE_REDIRECT_URI=

# GFARM_HTTP_OIDC_CLIENT_ID (required)
#   OpenID Connect client ID
#   ex.: GFARM_HTTP_OIDC_CLIENT_ID=hpci-jwt-server

# GFARM_HTTP_OIDC_CLIENT_SECRET (required)
#   OpenID Connect client secret
#   ex.: GFARM_HTTP_OIDC_CLIENT_SECRET="eJxl5z1EHU0u6BVLpR5MG0v4NLgCZWWG"

# GFARM_HTTP_KEYCLOAK_SERVER (optional)
#   OpenID Connect server
#   (used for string replacement)
#   ex.: GFARM_HTTP_KEYCLOAK_SERVER=https://keycloak.test:8443

# GFARM_HTTP_KEYCLOAK_REALM (optional)
#   OpenID Connect REALM (for keycloak)
#   (used for string replacement)
#   ex.: GFARM_HTTP_KEYCLOAK_REALM=HPCI

# GFARM_HTTP_OIDC_BASE_URL
#   OpenID Connect base URL
#   (used for string replacement)
#   Default is for Keycloak
#   NOTE: "http://" is not work for Gfarm
#     gfmd[]: <err> [1005366]
#     SASL: xoauth2_plugin: introspect_token #012 Issuer URL must be HTTPS
GFARM_HTTP_OIDC_BASE_URL="{GFARM_HTTP_KEYCLOAK_SERVER}/auth/realms/{GFARM_HTTP_KEYCLOAK_REALM}"

# GFARM_HTTP_OIDC_META_URL
#   url for /.well-known/openid-configuration
#   SEE: https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationRequest
GFARM_HTTP_OIDC_META_URL="{GFARM_HTTP_OIDC_BASE_URL}/.well-known/openid-configuration"

# GFARM_HTTP_OIDC_CERTS_URL
#   jwks_uri from GFARM_HTTP_OIDC_META_URL
#   Default is for Keycloak
GFARM_HTTP_OIDC_CERTS_URL="{GFARM_HTTP_OIDC_BASE_URL}/protocol/openid-connect/certs"

# GFARM_HTTP_OIDC_LOGOUT_URL
#   end_session_endpoint from GFARM_HTTP_OIDC_META_URL
#   Default is for Keycloak
GFARM_HTTP_OIDC_LOGOUT_URL="{GFARM_HTTP_OIDC_BASE_URL}/protocol/openid-connect/logout"

# GFARM_HTTP_TOKEN_VERIFY
#   verify token
#   value: yes, no
GFARM_HTTP_TOKEN_VERIFY=yes

# GFARM_HTTP_TOKEN_MIN_VALID_TIME_REMAINING
#   minimum remaining valid time before using refresh token
#   value: in second
GFARM_HTTP_TOKEN_MIN_VALID_TIME_REMAINING=60

# GFARM_HTTP_TOKEN_AUDIENCE (optional)
#   allow audience ("aud" claim) to verify
#   ex.: GFARM_HTTP_TOKEN_AUDIENCE=hpci
#   ex.: GFARM_HTTP_TOKEN_AUDIENCE=None (allow any "aud" claim)
#   ex.: GFARM_HTTP_TOKEN_AUDIENCE=     (allow any "aud")
GFARM_HTTP_TOKEN_AUDIENCE=

# GFARM_HTTP_TOKEN_ISSUERS
#   allow issuers (list of "iss" claim) to verify
#   ex.: GFARM_HTTP_TOKEN_ISSUERS="https://keycloak.test:8443/auth/realms/HPCI"
#   ex.: GFARM_HTTP_TOKEN_ISSUERS="https://keycloak1.test:8443/auth/realms/HPCI,https://keycloak2.test:8443/auth/realms/HPCI"
#   ex.: GFARM_HTTP_TOKEN_ISSUERS=None (allow any "iss" claim)
#   ex.: GFARM_HTTP_TOKEN_ISSUERS=     (allow any "iss" claim)
GFARM_HTTP_TOKEN_ISSUERS=

# GFARM_HTTP_TOKEN_USER_CLAIM
#   log the claim in access token as username
GFARM_HTTP_TOKEN_USER_CLAIM=sub

# GFARM_HTTP_VERIFY_CERT
#   verify TLS certificate
#   value: yes ... secure
#          no  ... insecure (for developer)
GFARM_HTTP_VERIFY_CERT=yes

# GFARM_HTTP_SASL_MECHANISM_FOR_PASSWORD
#   SASL mechanism for password authentication
#   value: PLAIN ... use SASL PLAIN
#          LOGIN ... use SASL LOGIN
GFARM_HTTP_SASL_MECHANISM_FOR_PASSWORD=PLAIN

# GFARM_HTTP_ALLOW_ANONYMOUS
#   allow anonymous access (use SASL ANONYMOUS)
#   value: yes, no
GFARM_HTTP_ALLOW_ANONYMOUS=no

# GFARM_HTTP_ASYNC_GFEXPORT
#   for developer
#   value: yes, no
GFARM_HTTP_ASYNC_GFEXPORT=yes
