name: Test gfarm-http-gateway

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ./server/venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Run setup-latest-wo-sys-packages
        working-directory: server
        run: make setup-latest-wo-sys-packages
      - name: Run test
        working-directory: server
        run: make test
      - name: Run flake8
        working-directory: server
        run: make flake8
      - name: Update requirements.txt
        working-directory: server
        run: make freeze
      - name: Check for changes (for requirements.txt)
        working-directory: server
        id: check_changes
        # https://docs.github.com/ja/actions/writing-workflows/choosing-what-your-workflow-does/passing-information-between-jobs
        run: |
          git status --porcelain
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Commit files (for requirements.txt)
        working-directory: server
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "${{ github.event.pusher.email }}"
          git config --local user.name "github-actions(by ${{ github.event.pusher.name }})"
          git commit -a -m "(GitHub Actions) update requirements.txt"
      # https://github.com/ad-m/github-push-action
      - name: Push changes (for requirements.txt)
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          force: false
